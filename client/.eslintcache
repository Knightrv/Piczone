[{"G:\\MERN_yu\\piczone\\server\\client\\src\\index.js":"1","G:\\MERN_yu\\piczone\\server\\client\\src\\App.js":"2","G:\\MERN_yu\\piczone\\server\\client\\src\\reportWebVitals.js":"3","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\Navbar.js":"4","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\Home.js":"5","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\UserProfile.js":"6","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\ResetPassword.js":"7","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\Register.js":"8","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\CreatePost.js":"9","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\Profile.js":"10","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\FollowingProfile.js":"11","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\NewPassword.js":"12","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\Login.js":"13","G:\\MERN_yu\\piczone\\server\\client\\src\\reducers\\userReducer.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":2155,"mtime":1612516341596,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":3738,"mtime":1612526036594,"results":"19","hashOfConfig":"16"},{"size":5241,"mtime":1612525756357,"results":"20","hashOfConfig":"16"},{"size":6673,"mtime":1612526012898,"results":"21","hashOfConfig":"16"},{"size":1753,"mtime":1612525932872,"results":"22","hashOfConfig":"16"},{"size":3697,"mtime":1612525917445,"results":"23","hashOfConfig":"16"},{"size":2810,"mtime":1612019998276,"results":"24","hashOfConfig":"16"},{"size":9112,"mtime":1612525893718,"results":"25","hashOfConfig":"16"},{"size":5164,"mtime":1612525702425,"results":"26","hashOfConfig":"16"},{"size":1500,"mtime":1612525799907,"results":"27","hashOfConfig":"16"},{"size":2355,"mtime":1612525786633,"results":"28","hashOfConfig":"16"},{"size":550,"mtime":1612526041438,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1f8i9ms",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\MERN_yu\\piczone\\server\\client\\src\\index.js",[],["68","69"],"G:\\MERN_yu\\piczone\\server\\client\\src\\App.js",["70","71"],"import React,{useEffect,createContext,useReducer,useContext} from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport {BrowserRouter,Route,useHistory,Switch} from \"react-router-dom\";\nimport Home from \"./components/screens/Home\";\nimport Login from \"./components/screens/Login\";\nimport Profile from \"./components/screens/Profile\";\nimport UserProfile from \"./components/screens/UserProfile\";\nimport ResetPassword from \"./components/screens/ResetPassword\";\nimport Register from \"./components/screens/Register\";\nimport CreatePost from \"./components/screens/CreatePost\";\nimport FollowingProfile from \"./components/screens/FollowingProfile\";\nimport NewPassword from \"./components/screens/NewPassword\";\nimport {reducer,initialState} from \"./reducers/userReducer\";\nimport 'materialize-css/dist/css/materialize.min.css';\n\n\nexport const UserContext = createContext();\n\nconst Routing = ()=>{ \n\t\tconst history = useHistory();\n\t\tconst {state,dispatch} = useContext(UserContext);\n\t\tuseEffect(()=>{\n\t\t\tconst user = JSON.parse(localStorage.getItem(\"user\"));\n\t\t\tif(user){\n\t\t\t\t\tdispatch({type:\"USER\",payload:user});\n\t\t\t}else{\n\t\t\t\tif(!history.location.pathname.startsWith('/resetpassword')){\n\t\t\t\t\thistory.push(\"/login\");\n\t\t\t\t}\n\t\t\t}\n\t\t},[])\n    return (\n      <Switch>\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/register\">\n\t\t\t\t\t<Register />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path=\"/profile\">\n\t\t\t\t\t<Profile />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/create\">\n\t\t\t\t\t<CreatePost />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/profile/:userID\">\n\t\t\t\t\t<UserProfile />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/myfollowingposts\">\n\t\t\t\t\t<FollowingProfile />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path=\"/resetpassword\" >\n\t\t\t\t\t<ResetPassword />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/resetpassword/:token\">\n\t\t\t\t\t<NewPassword />\n\t\t\t\t</Route>\n      </Switch> \n    )\n}\n\nfunction App() {\n\tconst [state,dispatch] = useReducer(reducer,initialState)\n  return (\n\t\t<UserContext.Provider value={{state,dispatch}}>\n\t\t\t<BrowserRouter> \n\t\t\t\t<Navbar />\n\t\t\t\t<Routing />\n\t\t\t</BrowserRouter>\n\t\t</UserContext.Provider>\n  );  \n}\n\nexport default App;\n","G:\\MERN_yu\\piczone\\server\\client\\src\\reportWebVitals.js",[],"G:\\MERN_yu\\piczone\\server\\client\\src\\components\\Navbar.js",[],"G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\Home.js",["72","73","74"],"import React, {useEffect,useState,useContext} from \"react\";\r\nimport {UserContext} from \"../../App\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Home = ()=>{\r\n    const [data,setData] = useState([]);\r\n    const {state,dispatch} = useContext(UserContext);\r\n    useEffect(()=>{\r\n        fetch(\"/allposts\",{\r\n            headers : {\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n        \r\n            setData(data.posts);\r\n        })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n        fetch('/like',{\r\n            method : \"put\",\r\n            headers : {\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body : JSON.stringify({\r\n                postID : id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n            const newData = data.map(item=>{\r\n                if(item._id===result._id){\r\n                    return result;\r\n                }else{\r\n                    return item;\r\n                }\r\n            })\r\n            \r\n            setData(newData);\r\n        }).catch(err=>console.log(err))\r\n    }\r\n    \r\n    const unlikePost = (id)=>{\r\n        fetch('/unlike',{\r\n            method : \"put\",\r\n            headers : {\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body : JSON.stringify({\r\n                postID : id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n            const newData = data.map(item=>{\r\n                if(item._id===result._id){\r\n                    return result;\r\n                }else{\r\n                    return item;\r\n                }\r\n            })\r\n          \r\n            setData(newData);\r\n        }).catch(err=>console.log(err))\r\n    }\r\n\r\n    const makeComment = (text,postID)=>{\r\n        fetch(\"/comment\",{\r\n            method : \"put\",\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\",\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body : JSON.stringify({\r\n                postID,\r\n                text \r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            const newData = data.map(item=>{\r\n                if(item._id===result._id){\r\n                    return result;\r\n                }else{\r\n                    return item;\r\n                }\r\n            })\r\n            setData(newData);\r\n        }).catch(err=>console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"home\">\r\n            {\r\n                data.map((item,index)=>{\r\n                  \r\n                    return (\r\n                    <div className=\"card home-card\" key={item._id}>\r\n                        <div style={{marginBottom:\"4px\",marginTop:\"4px\",marginLeft:\"10px\"}}>\r\n                        <Link to={item.postedBy._id!==state._id?\"/profile/\"+item.postedBy._id:\"/profile\"}>\r\n                            <img style={{width:\"50px\",height:\"50px\",borderRadius:\"25px\",margin:\"10px\"}}\r\n                                src={item.postedBy.pic}\r\n                            /></Link>\r\n                             <h5 style={{padding:\"16px\",display:\"inline\",position:\"relative\",bottom:\"20px\"}}><Link to={item.postedBy._id!==state._id?\"/profile/\"+item.postedBy._id:\"/profile\"}>{item.postedBy.username}</Link></h5>\r\n                        </div>\r\n                        <div className=\"card-image\">\r\n                            <img src= {item.photo} />\r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                            {item.likes.includes(state._id)\r\n                                ?   <i className=\"material-icons blue-text text-darken-4\" onClick={()=>unlikePost(item._id)}>thumb_up</i>\r\n                                :   <i className=\"material-icons black-text text-lighten-4\" onClick = {()=>{likePost(item._id)}}>thumb_up</i>\r\n                            }\r\n                            <h6>{item.likes.length} likes</h6>\r\n                            <h6>{item.title}</h6>\r\n                            <p>{item.body}</p>\r\n                            {\r\n                                item.comments.map((record,index)=>{\r\n                                    return <h6><span style={{fontWeight:\"500\"}}>{record.postedBy.username+\"  \"}</span>{record.text}</h6>\r\n                                })\r\n                            }\r\n                            <form onSubmit = {event=>{\r\n                                makeComment(event.target[0].value,item._id);\r\n                                event.target[0].value=\"\";\r\n                                event.preventDefault();\r\n                            }}> \r\n                                <input type=\"text\"  placeholder=\"Add comment\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>  \r\n                    )\r\n                })}\r\n                  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\UserProfile.js",["75","76","77","78"],"import React,{useEffect,useState,useContext} from \"react\";\r\nimport {UserContext} from \"../../App\";\r\nimport Modal from 'react-modal';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {useParams,useHistory} from \"react-router-dom\";\r\n\r\nconst UserProfile = ()=>{\r\n    const {userID} = useParams();\r\n    const {state,dispatch} = useContext(UserContext);\r\n    const [selectedImage,setSelectedImage] = useState(null);\r\n    const [showFollow,setShowFollow] = useState(state?!state.following.includes(userID):true);\r\n    const [userProfile,setProfile]=useState(null);\r\n\r\n   const history = useHistory();\r\n \r\n    useEffect(()=>{\r\n        fetch(\"/user/\"+userID,{\r\n            headers : {\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           \r\n            if(data.error && data.error===\"same\"){\r\n                history.push(\"/profile\");\r\n            }\r\n            else{\r\n                setProfile(data);\r\n            }\r\n        })\r\n    },[])\r\n    const followUser = ()=>{\r\n        fetch('/follow',{\r\n            method: \"put\",\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\",\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body : JSON.stringify({\r\n                followId : userID\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            \r\n            dispatch({type:\"UPDATE\",payload:{following: data.following,followers:data.followers}});\r\n            localStorage.setItem(\"user\",JSON.stringify(data));\r\n            setProfile((prevState=>{\r\n                \r\n                return {\r\n                    ...prevState,\r\n                    user : {\r\n                        ...prevState.user,\r\n                        followers : [...prevState.user.followers,data._id]\r\n                    }\r\n                }\r\n            }))\r\n            setShowFollow(false);\r\n        })\r\n    }\r\n\r\n    const unfollowUser = ()=>{\r\n        fetch('/unfollow',{\r\n            method: \"put\",\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\",\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body : JSON.stringify({\r\n                unfollowId : userID\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            \r\n            dispatch({type:\"UPDATE\",payload:{following: data.following,followers:data.followers}});\r\n            localStorage.setItem(\"user\",JSON.stringify(data));\r\n            setProfile((prevState=>{\r\n                \r\n                const newFollower = prevState.user.followers.filter(item=>item !=data._id);\r\n              \r\n                return {\r\n                    ...prevState,\r\n                    user : {\r\n                        ...prevState.user,\r\n                        followers : newFollower\r\n                    }\r\n                }\r\n            }))\r\n            setShowFollow(true);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {!userProfile?<h2>Loading..</h2>:\r\n        <div style={{maxWidth:\"1050px\",margin:\"0px auto\"}}>\r\n            <div style={{display:\"flex\",justifyContent:\"flex-start\",margin:\"20px 70px\",borderBottom:\"1px solid grey\"}}>\r\n                <div style={{marginBottom:\"4px\",marginRight:\"60px\"}}>\r\n                    <img style={{width:\"140px\",height:\"140px\",borderRadius:\"75px\"}} src={userProfile?userProfile.user.pic:\"loading\"}/>\r\n                </div>\r\n                <div>\r\n                    <h4>{userProfile.user.username}</h4>\r\n                    <h5 style={{fontFamily:\"cursive\"}}>{userProfile.user.name}</h5>\r\n                    <div style={{display:\"flex\",width:\"108%\",justifyContent:\"space-between\",position:\"relative\",left:\"auto\"}}>\r\n                        <h6>{userProfile.posts.length} posts</h6>\r\n                        <h6>{userProfile.user.followers.length} followers</h6>\r\n                        <h6>{userProfile.user.following.length} following</h6>\r\n                    </div>\r\n                    {showFollow && <button style={{margin:\"10px\"}} className=\"btn waves-effect waves-light #ff1744 red accent-3\" type=\"submit\" name=\"action\" onClick={()=>followUser()}>Follow</button>}\r\n                    {!showFollow && <button style={{margin:\"10px\"}} className=\"btn waves-effect waves-light #ff1744 red accent-3\" type=\"submit\" name=\"action\" onClick={()=>unfollowUser()}>Unfollow</button>}\r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n            {\r\n                userProfile.posts.map((item,index)=>{\r\n                    return <img className=\"item\" src={item.photo} alt={item.title} key={item._id} onClick={()=>setSelectedImage(item)}/>\r\n                })\r\n            }\r\n              \r\n            </div>\r\n            {\r\n               selectedImage && \r\n               <Modal isOpen={true} style={{\r\n                   overlay:{\r\n                       backgroundColor :\"grey\"\r\n                   },\r\n                   content:{\r\n                       maxHeight:\"880px\",\r\n                       maxWidth:\"880px\",\r\n                       margin:\"20px auto\"\r\n                   }\r\n               }} ariaHideApp={false}>\r\n               <div className=\"container\" style={{height:\"100%\",width:\"100%\"}}>\r\n               <div>\r\n                <i className=\"material-icons black-text text-darken-4 right\" data-tip data-for=\"closePost\" style={{padding:\"10px\"}} onClick={()=>setSelectedImage(null)}>close</i>\r\n                <ReactTooltip id=\"closePost\"><span>Close Post</span></ReactTooltip>\r\n                </div>\r\n                <div id=\"left\">\r\n                        <img src = {selectedImage.photo} style={{maxHeight:\"500px\",width:\"100%\",objectFit:\"contain\"}} />\r\n                    </div>\r\n                    <div id=\"right\">\r\n                        <div className=\"row\" style={{overflow:\"scroll\"}}>\r\n                            <h6>{selectedImage.likes.length} likes</h6>\r\n                            <h6>{selectedImage.title}</h6>\r\n                            <p>{selectedImage.body}</p>\r\n                            {\r\n                                selectedImage.comments.map((record,index)=>{\r\n                                    return <h6><span style={{fontWeight:\"500\"}}>{record.postedBy.username+\"  \"}</span>{record.text}</h6>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n               </Modal>\r\n            }\r\n        </div>\r\n        \r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserProfile;","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\ResetPassword.js",["79","80","81","82"],"import React,{useState} from \"react\";\r\nimport {useHistory}  from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n\r\n\r\nconst ResetPassword = ()=>{\r\n    const [email,setEmail]  = useState(\"\");\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const history =useHistory();\r\n    const checkEmail= ()=>{\r\n        if(!re.test(email)){\r\n            M.toast({html: \"Invalid E-mail\",classes:\"#b71c1c red darken-3\"});\r\n            return;\r\n        }\r\n        fetch('/reset-password',{\r\n            method:\"post\",\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body : JSON.stringify({\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n       \r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#b71c1c red darken-3\"});\r\n                return;\r\n            }else{\r\n                M.toast({html: data.message,classes:\"#7cb342 light-green darken-1\"});\r\n                history.push(\"/resetpassword/\"+data.token);\r\n            }\r\n        }).catch(err=>console.log(err))\r\n    }\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>PicZone</h2>\r\n                <input type=\"email\" placeholder=\"Enter e-mail\" value={email} onChange={event=>setEmail(event.target.value)}/>\r\n                <button className=\"btn waves-effect waves-light #ff1744 red accent-3\" type=\"submit\" name=\"action\" onClick={()=>checkEmail()}>Reset Password</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default ResetPassword;","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\Register.js",["83","84","85","86","87"],"import React,{useState,useEffect} from \"react\";\r\nimport {Link,useHistory} from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n\r\nconst Register = ()=>{\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const history=useHistory();\r\n    const [name,setName]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const [email,setEmail]=useState(\"\");\r\n    const [username,setUsername]=useState(\"\");\r\n    const [image,setImage] = useState(\"\");\r\n    const [url,setUrl] = useState(undefined);\r\n\r\n    useEffect(()=>{\r\n        if(url){\r\n            uploadFields();\r\n        }\r\n    },[url])\r\n\r\n    const uploadPic=()=>{\r\n        const data = new FormData();\r\n        data.append(\"file\",image);\r\n        data.append('upload_preset',\"piczone\"); \r\n        data.append('cloud_name','cloud-piczone');\r\n        fetch(\"https://api.cloudinary.com/v1_1/cloud-piczone/image/upload\",{\r\n            method: \"post\",\r\n            body: data\r\n        }).then(res=>res.json())\r\n        .then(data=>setUrl(data.secure_url))\r\n        .catch(err=>console.log(err))\r\n    }\r\n    const uploadFields = ()=>{\r\n        if(!re.test(email)){\r\n            M.toast({html: \"Invalid E-mail\",classes:\"#b71c1c red darken-3\"});\r\n            return;\r\n        }\r\n        fetch(\"/register\",{\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                username,\r\n                name,\r\n                email,\r\n                password,\r\n                pic: url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#b71c1c red darken-3\"});\r\n                return;\r\n            }else{\r\n                M.toast({html: data.message,classes:\"#7cb342 light-green darken-1\"});\r\n                history.push(\"/login\");\r\n            }\r\n        }).catch(err=>console.log(err))   \r\n    }\r\n\r\n    const postData=()=>{\r\n        if(image){\r\n            uploadPic();\r\n        }else{\r\n            uploadFields();\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>PicZone</h2>\r\n                <input type=\"text\" placeholder=\"Username\" value={username} onChange={event=>setUsername(event.target.value)}/>\r\n                <input type=\"text\" placeholder=\"FullName\" value={name} onChange={event=>setName(event.target.value)}/>\r\n                <input type=\"email\" placeholder=\"E-mail\" value={email} onChange={event=>setEmail(event.target.value)}/>\r\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={event=>setPassword(event.target.value)}/>\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn waves-effect waves-light #ff1744 red accent-3\">\r\n                        <span>Upload Profile Pic</span>\r\n                        <input type=\"file\" onChange={event=>setImage(event.target.files[0])} />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light #ff1744 red accent-3\" type=\"submit\" name=\"action\" onClick={()=>postData()}>Register</button>\r\n                <h6><Link to=\"/login\">Already have an account?</Link></h6>\r\n            </div>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Register;","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\CreatePost.js",["88"],"import React, { useState,useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n\r\nconst CreatePost = ()=>{\r\n    const [title,setTitle] = useState(\"\");\r\n    const [caption,setCaption] = useState(\"\");\r\n    const [image,setImage] = useState(\"\");\r\n    const [url,setUrl]= useState(\"\");\r\n    const history=useHistory();\r\n    useEffect(()=>{\r\n        if(url){\r\n            fetch(\"/createpost\",{\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    title,\r\n                    caption,\r\n                    image:url\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                if(data.error){\r\n                    M.toast({html: data.error,classes:\"#b71c1c red darken-3\"});\r\n                    return;\r\n                }else{\r\n                    M.toast({html: \"Post created Successfully :)\",classes:\"#7cb342 light-green darken-1\"});\r\n                    history.push(\"/\");\r\n                }\r\n            }).catch(err=>console.log(err))\r\n        }\r\n    },[url])\r\n    const postData=()=>{\r\n        const data = new FormData();\r\n        data.append(\"file\",image);\r\n        data.append('upload_preset',\"piczone\"); \r\n        data.append('cloud_name','cloud-piczone');\r\n        fetch(\"https://api.cloudinary.com/v1_1/cloud-piczone/image/upload\",{\r\n            method: \"post\",\r\n            body: data\r\n        }).then(res=>res.json())\r\n        .then(data=>setUrl(data.secure_url))\r\n        .catch(err=>console.log(err))\r\n    }\r\n    return (\r\n        <div className=\"card input-field\" style={{margin:\"20px auto\",maxWidth:\"550px\",padding:\"20px\"}}>\r\n            <input type=\"text\" placeholder=\"Title\" value={title} onChange={event=>setTitle(event.target.value)}/>\r\n            <input type=\"text\" placeholder=\"Caption\" value={caption} onChange={event=>setCaption(event.target.value)}/>\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn waves-effect waves-light #ff1744 red accent-3\">\r\n                    <span>Upload Image</span>\r\n                    <input type=\"file\" onChange={event=>setImage(event.target.files[0])} />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #ff1744 red accent-3\" type=\"submit\" name=\"action\" style={{margin:\"10px auto\",display:\"flex\"}} onClick={()=>postData()}>Post</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\Profile.js",["89","90","91","92","93","94","95","96","97"],"import React,{useEffect,useState,useContext,useRef} from \"react\";\r\nimport {UserContext} from \"../../App\";\r\nimport Modal from 'react-modal';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {Link,useHistory} from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n\r\nconst Profile = ()=>{\r\n    const history = useHistory();\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const [selectedImage,setSelectedImage] = useState(null);\r\n    const [pics,setPics]=useState([]);\r\n    const [image,setImage] = useState(\"\");\r\n    const [url,setUrl] = useState(undefined);\r\n    const {state,dispatch} = useContext(UserContext);\r\n    const [name,setName] = useState(\"\");\r\n    const [username,setUsername] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n  \r\n   const inputRef = useRef(\"\");\r\n    useEffect(()=>{\r\n        fetch(\"/mypost\",{\r\n            headers : {\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           \r\n            setPics(data.myPost);\r\n        })\r\n    },[])\r\n\r\n\r\n    const uploadFields = ()=>{\r\n        if(email!==\"\" && !re.test(email)){\r\n            M.toast({html: \"Invalid E-mail\",classes:\"#b71c1c red darken-3\"});\r\n            return;\r\n        }\r\n        fetch(\"/uploadpic\",{\r\n            method: \"put\",\r\n            headers: {\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                username : username===\"\"?undefined:username,\r\n                name : name===\"\"?undefined:name,\r\n                email : email===\"\"?undefined:email,\r\n                pic: url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           \r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#b71c1c red darken-3\"});\r\n                setName(\"\");\r\n                setEmail(\"\");\r\n                setImage(\"\");\r\n                setUrl(undefined);\r\n                setUsername(\"\");\r\n                return;\r\n            }else{\r\n                localStorage.setItem(\"user\",JSON.stringify({...state,...data}))\r\n                dispatch({type:\"UPDATEPIC\",payload:data})\r\n                M.toast({html: \"Profile Successfully Updated\",classes:\"#7cb342 light-green darken-1\"});\r\n                setName(\"\");\r\n                setEmail(\"\");\r\n                setImage(\"\");\r\n                setUrl(undefined);\r\n                setUsername(\"\");\r\n                history.push(\"/profile\");\r\n            }\r\n        })   \r\n    }\r\n\r\n    const uploadPic=()=>{\r\n        if(image!=\"\"){\r\n            const data = new FormData();\r\n          \r\n            data.append(\"file\",image);\r\n            data.append('upload_preset',\"piczone\"); \r\n            data.append('cloud_name','cloud-piczone');\r\n            fetch(\"https://api.cloudinary.com/v1_1/cloud-piczone/image/upload\",{\r\n                method: \"post\",\r\n                body: data\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                setUrl(data.secure_url);\r\n               \r\n                inputRef.current.value=\"\";\r\n                uploadFields();\r\n            })\r\n            .catch(err=>console.log(err))\r\n        }else{\r\n            uploadFields();\r\n        }\r\n    }\r\n\r\n    const deletePost = (postID)=>{\r\n        fetch(`/deletepost/${postID}`,{\r\n            method : \"delete\",\r\n            headers : {\r\n                Authorization : \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n           \r\n            const newPic = pics.filter(item=>item._id!==result._id);\r\n            setPics(newPic);\r\n            setSelectedImage(null);\r\n        })\r\n    }\r\n    return (\r\n        <div style={{maxWidth:\"1050px\",margin:\"0px auto\"}}>\r\n            <div style={{display:\"flex\",justifyContent:\"flex-start\",margin:\"20px 70px\",borderBottom:\"1px solid grey\"}}>\r\n                <div style={{marginBottom:\"4px\",marginRight:\"60px\"}}>\r\n                    <img style={{width:\"140px\",height:\"140px\",borderRadius:\"75px\"}}\r\n                        src={state?state.pic:\"loading..\"}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>{state?state.username:\"loading\"}</h4>\r\n                    <h5 style={{fontFamily:\"cursive\"}}>{state?state.name:\"loading\"}</h5>\r\n                    <div style={{display:\"flex\",width:\"108%\",justifyContent:\"space-between\",position:\"relative\",left:\"auto\"}}>\r\n                        <h6>{pics.length} posts</h6>\r\n                        <h6>{state?state.followers.length:0} followers</h6>\r\n                        <h6>{state?state.following.length:0} following</h6>\r\n                    </div>\r\n                </div>\r\n                <div style={{position:\"relative\",right:\"10px\"}}>\r\n                    <a href=\"#modal1\" className=\"modal-trigger\"><i className=\"material-icons black-text text-darken-4 right\" data-tip data-for=\"editPic\" style = {{padding:\"10px\"}}>edit</i></a>\r\n                    <ReactTooltip id=\"editPic\"><span>Edit Profile</span></ReactTooltip>\r\n                </div>\r\n                <div id=\"modal1\" className=\"modal\">\r\n                    <input style={{padding:\"10px\",margin:\"10px\"}} type=\"text\" placeholder=\"Username\"  value={username} onChange={event=>setUsername(event.target.value)}/>\r\n                    <input style={{padding:\"10px\",margin:\"10px\"}} type=\"text\" placeholder=\"FullName\" value={name} onChange={event=>setName(event.target.value)}/>\r\n                    <input style={{padding:\"10px\",margin:\"10px\"}} type=\"email\" placeholder=\"E-mail\" value={email} onChange={event=>setEmail(event.target.value)}/>\r\n                    <div className=\"file-field input-field modal-content\">\r\n                        <div className=\"btn waves-effect waves-light #ff1744 red accent-3\">\r\n                            <span>Update Profile Pic</span>\r\n                            <input type=\"file\" id=\"file1\" onChange={event=>{console.log(\"EVENT :\",event);setImage(event.target.files[0])}}/>\r\n                        </div>\r\n                        <div className=\"file-path-wrapper\">\r\n                            <input className=\"file-path validate\" type=\"text\" ref={inputRef}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <a href=\"#\" className=\"modal-close waves-effect waves-green btn-flat\" onClick={()=>{uploadPic()}}>Submit</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n            {\r\n                pics.map((item,index)=>{\r\n                    return <img className=\"item\" src={item.photo} alt={item.title} key={item._id} onClick={()=>setSelectedImage(item)}/>\r\n                })\r\n            }\r\n                \r\n            </div>\r\n            {\r\n               selectedImage && \r\n               <Modal isOpen={true} style={{\r\n                   overlay:{\r\n                       backgroundColor :\"grey\"\r\n                   },\r\n                   content:{\r\n                       maxHeight:\"880px\",\r\n                       maxWidth:\"880px\",\r\n                       margin:\"20px auto\"\r\n                   }\r\n               }} ariaHideApp={false}>\r\n               <div className=\"container\" style={{height:\"100%\",width:\"100%\"}}>\r\n               <div>\r\n                <i className=\"material-icons black-text text-darken-4 right\" data-tip data-for=\"deletePost\" style = {{padding:\"10px\"}} onClick={()=>deletePost(selectedImage._id)}>delete</i>\r\n                <ReactTooltip id=\"deletePost\"><span>Delete Post</span></ReactTooltip>\r\n                <i className=\"material-icons black-text text-darken-4 right\" data-tip data-for=\"closePost\" style={{padding:\"10px\"}} onClick={()=>setSelectedImage(null)}>close</i>\r\n                <ReactTooltip id=\"closePost\"><span>Close Post</span></ReactTooltip>\r\n                </div>\r\n                <div id=\"left\">\r\n                        <img src = {selectedImage.photo} style={{maxHeight:\"500px\",width:\"100%\",objectFit:\"contain\"}} />\r\n                    </div>\r\n                    <div id=\"right\">\r\n                        <div className=\"row\" style={{overflow:\"scroll\"}}>\r\n                            <h6>{selectedImage.likes.length} likes</h6>\r\n                            <h6>{selectedImage.title}</h6>\r\n                            <p>{selectedImage.body}</p>\r\n                            {\r\n                                selectedImage.comments.map((record,index)=>{\r\n                                    return <h6><span style={{fontWeight:\"500\"}}>{record.postedBy.username+\"  \"}</span>{record.text}</h6>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n               </Modal>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\FollowingProfile.js",["98","99","100"],"import React, {useEffect,useState,useContext} from \"react\";\r\nimport {UserContext} from \"../../App\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Home = ()=>{\r\n    const [data,setData] = useState([]);\r\n    const {state,dispatch} = useContext(UserContext);\r\n    useEffect(()=>{\r\n        fetch(\"/followingposts\",{\r\n            headers : {\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            setData(data.posts);\r\n        })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n        fetch('/like',{\r\n            method : \"put\",\r\n            headers : {\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body : JSON.stringify({\r\n                postID : id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n            const newData = data.map(item=>{\r\n                if(item._id===result._id){\r\n                    return result;\r\n                }else{\r\n                    return item;\r\n                }\r\n            })\r\n            setData(newData);\r\n        }).catch(err=>console.log(err))\r\n    }  \r\n\r\n    const unlikePost = (id)=>{\r\n        fetch('/unlike',{\r\n            method : \"put\",\r\n            headers : {\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body : JSON.stringify({\r\n                postID : id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n            const newData = data.map(item=>{\r\n                if(item._id===result._id){\r\n                    return result;\r\n                }else{\r\n                    return item;\r\n                }\r\n            })\r\n            setData(newData);\r\n        }).catch(err=>console.log(err))\r\n    }\r\n\r\n    const makeComment = (text,postID)=>{\r\n        fetch(\"/comment\",{\r\n            method : \"put\",\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\",\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body : JSON.stringify({\r\n                postID,\r\n                text \r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            const newData = data.map(item=>{\r\n                if(item._id===result._id){\r\n                    return result;\r\n                }else{\r\n                    return item;\r\n                }\r\n            })\r\n            setData(newData);\r\n        }).catch(err=>console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"home\">\r\n            {\r\n                data.map((item,index)=>{\r\n                    return (\r\n                    <div className=\"card home-card\" key={item._id}>\r\n                        <div style={{marginBottom:\"4px\",marginLeft:\"10px\",marginTop:\"4px\"}}>\r\n                        <Link to={item.postedBy._id!==state._id?\"/profile/\"+item.postedBy._id:\"/profile\"}>\r\n                            <img style={{width:\"50px\",height:\"50px\",borderRadius:\"25px\",margin:\"10px\"}}\r\n                                src={item.postedBy.pic}\r\n                            /></Link>\r\n                            <h5 style={{padding:\"16px\",display:\"inline\",position:\"relative\",bottom:\"20px\"}}><Link to={item.postedBy._id!==state._id?\"/profile/\"+item.postedBy._id:\"/profile\"}>{item.postedBy.username}</Link></h5>\r\n                        </div>\r\n                        <div className=\"card-image\">\r\n                            <img src= {item.photo} />\r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                            {item.likes.includes(state._id)\r\n                                ?   <i className=\"material-icons blue-text text-darken-4\" onClick={()=>unlikePost(item._id)}>thumb_up</i>\r\n                                :   <i className=\"material-icons black-text text-lighten-4\" onClick = {()=>{likePost(item._id)}}>thumb_up</i>\r\n                            }\r\n                            <h6>{item.likes.length} likes</h6>\r\n                            <h6>{item.title}</h6>\r\n                            <p>{item.body}</p>\r\n                            {\r\n                                item.comments.map((record,index)=>{\r\n                                    return <h6><span style={{fontWeight:\"500\"}}>{record.postedBy.name+\"  \"}</span>{record.text}</h6>\r\n                                })\r\n                            }\r\n                            <form onSubmit = {event=>{\r\n                                makeComment(event.target[0].value,item._id);\r\n                                event.target[0].value=\"\";\r\n                                event.preventDefault();\r\n                            }}> \r\n                                <input type=\"text\"  placeholder=\"Add comment\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>  \r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\NewPassword.js",[],"G:\\MERN_yu\\piczone\\server\\client\\src\\components\\screens\\Login.js",["101","102","103","104","105"],"import React,{useState,useContext} from \"react\";\r\nimport {Link,useHistory} from \"react-router-dom\";\r\nimport {UserContext} from \"../../App\";\r\nimport M from \"materialize-css\";\r\n\r\nconst Login = ()=>{\r\n    const {state,dispatch} = useContext(UserContext);\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const history=useHistory();\r\n    const [password,setPassword]=useState(\"\");\r\n    const [email,setEmail]=useState(\"\");\r\n\r\n    const loginData=()=>{\r\n        if(!re.test(email)){\r\n            M.toast({html: \"Invalid E-mail\",classes:\"#b71c1c red darken-3\"});\r\n            return;\r\n        }\r\n        fetch(\"/login\",{\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            \r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#b71c1c red darken-3\"});\r\n                return;\r\n            }else{\r\n                localStorage.setItem(\"jwt\",data.token);\r\n                localStorage.setItem(\"user\",JSON.stringify(data.user));\r\n                dispatch({type: \"USER\",payload:data.user})\r\n                M.toast({html: \"Successfully Logged in :)\",classes:\"#7cb342 light-green darken-1\"});\r\n                history.push(\"/\");\r\n            }\r\n        }).catch(err=>console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>PicZone</h2>\r\n                <input type=\"email\" placeholder=\"E-mail\" value={email} onChange={event=>setEmail(event.target.value)}/>\r\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={event=>setPassword(event.target.value)}/>\r\n                <button className=\"btn waves-effect waves-light #ff1744 red accent-3\" type=\"submit\" name=\"action\" onClick={()=>loginData()}>Login</button>\r\n                <h6><Link to=\"/register\">Don't have an account?</Link></h6>\r\n                <h6><Link to=\"/resetpassword\">Forgot Password ?</Link></h6>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","G:\\MERN_yu\\piczone\\server\\client\\src\\reducers\\userReducer.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":22,"column":10,"nodeType":"112","messageId":"113","endLine":22,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":32,"column":5,"nodeType":"116","endLine":32,"endColumn":7,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"118","line":7,"column":18,"nodeType":"112","messageId":"113","endLine":7,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":102,"column":29,"nodeType":"121","endLine":104,"endColumn":31},{"ruleId":"119","severity":1,"message":"120","line":108,"column":29,"nodeType":"121","endLine":108,"endColumn":54},{"ruleId":"114","severity":1,"message":"122","line":31,"column":7,"nodeType":"116","endLine":31,"endColumn":9,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":78,"column":80,"nodeType":"126","messageId":"127","endLine":78,"endColumn":82},{"ruleId":"119","severity":1,"message":"120","line":98,"column":21,"nodeType":"121","endLine":98,"endColumn":135},{"ruleId":"119","severity":1,"message":"120","line":138,"column":25,"nodeType":"121","endLine":138,"endColumn":121},{"ruleId":"128","severity":1,"message":"129","line":8,"column":38,"nodeType":"130","messageId":"131","endLine":8,"endColumn":39,"suggestions":"132"},{"ruleId":"128","severity":1,"message":"129","line":8,"column":63,"nodeType":"130","messageId":"131","endLine":8,"endColumn":64,"suggestions":"133"},{"ruleId":"128","severity":1,"message":"129","line":8,"column":72,"nodeType":"130","messageId":"131","endLine":8,"endColumn":73,"suggestions":"134"},{"ruleId":"128","severity":1,"message":"129","line":8,"column":76,"nodeType":"130","messageId":"131","endLine":8,"endColumn":77,"suggestions":"135"},{"ruleId":"128","severity":1,"message":"129","line":6,"column":38,"nodeType":"130","messageId":"131","endLine":6,"endColumn":39,"suggestions":"136"},{"ruleId":"128","severity":1,"message":"129","line":6,"column":63,"nodeType":"130","messageId":"131","endLine":6,"endColumn":64,"suggestions":"137"},{"ruleId":"128","severity":1,"message":"129","line":6,"column":72,"nodeType":"130","messageId":"131","endLine":6,"endColumn":73,"suggestions":"138"},{"ruleId":"128","severity":1,"message":"129","line":6,"column":76,"nodeType":"130","messageId":"131","endLine":6,"endColumn":77,"suggestions":"139"},{"ruleId":"114","severity":1,"message":"140","line":19,"column":7,"nodeType":"116","endLine":19,"endColumn":12,"suggestions":"141"},{"ruleId":"114","severity":1,"message":"142","line":35,"column":7,"nodeType":"116","endLine":35,"endColumn":12,"suggestions":"143"},{"ruleId":"110","severity":1,"message":"144","line":5,"column":9,"nodeType":"112","messageId":"113","endLine":5,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":10,"column":38,"nodeType":"130","messageId":"131","endLine":10,"endColumn":39,"suggestions":"145"},{"ruleId":"128","severity":1,"message":"129","line":10,"column":63,"nodeType":"130","messageId":"131","endLine":10,"endColumn":64,"suggestions":"146"},{"ruleId":"128","severity":1,"message":"129","line":10,"column":72,"nodeType":"130","messageId":"131","endLine":10,"endColumn":73,"suggestions":"147"},{"ruleId":"128","severity":1,"message":"129","line":10,"column":76,"nodeType":"130","messageId":"131","endLine":10,"endColumn":77,"suggestions":"148"},{"ruleId":"124","severity":1,"message":"125","line":77,"column":17,"nodeType":"126","messageId":"127","endLine":77,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":117,"column":21,"nodeType":"121","endLine":119,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":148,"column":25,"nodeType":"121","endLine":148,"endColumn":123},{"ruleId":"119","severity":1,"message":"120","line":180,"column":25,"nodeType":"121","endLine":180,"endColumn":121},{"ruleId":"110","severity":1,"message":"118","line":7,"column":18,"nodeType":"112","messageId":"113","endLine":7,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":98,"column":29,"nodeType":"121","endLine":100,"endColumn":31},{"ruleId":"119","severity":1,"message":"120","line":104,"column":29,"nodeType":"121","endLine":104,"endColumn":54},{"ruleId":"110","severity":1,"message":"111","line":7,"column":12,"nodeType":"112","messageId":"113","endLine":7,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":8,"column":38,"nodeType":"130","messageId":"131","endLine":8,"endColumn":39,"suggestions":"151"},{"ruleId":"128","severity":1,"message":"129","line":8,"column":63,"nodeType":"130","messageId":"131","endLine":8,"endColumn":64,"suggestions":"152"},{"ruleId":"128","severity":1,"message":"129","line":8,"column":72,"nodeType":"130","messageId":"131","endLine":8,"endColumn":73,"suggestions":"153"},{"ruleId":"128","severity":1,"message":"129","line":8,"column":76,"nodeType":"130","messageId":"131","endLine":8,"endColumn":77,"suggestions":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["157"],"'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'history' and 'userID'. Either include them or remove the dependency array.",["158"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["159","160"],["161","162"],["163","164"],["165","166"],["167","168"],["169","170"],["171","172"],["173","174"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'caption', 'history', and 'title'. Either include them or remove the dependency array.",["176"],"'Link' is defined but never used.",["177","178"],["179","180"],["181","182"],["183","184"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["185","186"],["187","188"],["189","190"],["191","192"],"no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"messageId":"197","fix":"198","desc":"199"},{"messageId":"200","fix":"201","desc":"202"},{"messageId":"197","fix":"203","desc":"199"},{"messageId":"200","fix":"204","desc":"202"},{"messageId":"197","fix":"205","desc":"199"},{"messageId":"200","fix":"206","desc":"202"},{"messageId":"197","fix":"207","desc":"199"},{"messageId":"200","fix":"208","desc":"202"},{"messageId":"197","fix":"209","desc":"199"},{"messageId":"200","fix":"210","desc":"202"},{"messageId":"197","fix":"211","desc":"199"},{"messageId":"200","fix":"212","desc":"202"},{"messageId":"197","fix":"213","desc":"199"},{"messageId":"200","fix":"214","desc":"202"},{"messageId":"197","fix":"215","desc":"199"},{"messageId":"200","fix":"216","desc":"202"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"messageId":"197","fix":"221","desc":"199"},{"messageId":"200","fix":"222","desc":"202"},{"messageId":"197","fix":"223","desc":"199"},{"messageId":"200","fix":"224","desc":"202"},{"messageId":"197","fix":"225","desc":"199"},{"messageId":"200","fix":"226","desc":"202"},{"messageId":"197","fix":"227","desc":"199"},{"messageId":"200","fix":"228","desc":"202"},{"messageId":"197","fix":"229","desc":"199"},{"messageId":"200","fix":"230","desc":"202"},{"messageId":"197","fix":"231","desc":"199"},{"messageId":"200","fix":"232","desc":"202"},{"messageId":"197","fix":"233","desc":"199"},{"messageId":"200","fix":"234","desc":"202"},{"messageId":"197","fix":"235","desc":"199"},{"messageId":"200","fix":"236","desc":"202"},"Update the dependencies array to be: [dispatch, history]",{"range":"237","text":"238"},"Update the dependencies array to be: [history, userID]",{"range":"239","text":"240"},"removeEscape",{"range":"241","text":"242"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"243","text":"244"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"245","text":"242"},{"range":"246","text":"244"},{"range":"247","text":"242"},{"range":"248","text":"244"},{"range":"249","text":"242"},{"range":"250","text":"244"},{"range":"251","text":"242"},{"range":"252","text":"244"},{"range":"253","text":"242"},{"range":"254","text":"244"},{"range":"255","text":"242"},{"range":"256","text":"244"},{"range":"257","text":"242"},{"range":"258","text":"244"},"Update the dependencies array to be: [uploadFields, url]",{"range":"259","text":"260"},"Update the dependencies array to be: [caption, history, title, url]",{"range":"261","text":"262"},{"range":"263","text":"242"},{"range":"264","text":"244"},{"range":"265","text":"242"},{"range":"266","text":"244"},{"range":"267","text":"242"},{"range":"268","text":"244"},{"range":"269","text":"242"},{"range":"270","text":"244"},{"range":"271","text":"242"},{"range":"272","text":"244"},{"range":"273","text":"242"},{"range":"274","text":"244"},{"range":"275","text":"242"},{"range":"276","text":"244"},{"range":"277","text":"242"},{"range":"278","text":"244"},[1242,1244],"[dispatch, history]",[1035,1037],"[history, userID]",[235,236],"",[235,235],"\\",[260,261],[260,260],[269,270],[269,269],[273,274],[273,273],[197,198],[197,197],[222,223],[222,222],[231,232],[231,231],[235,236],[235,235],[722,727],"[uploadFields, url]",[1266,1271],"[caption, history, title, url]",[366,367],[366,366],[391,392],[391,391],[400,401],[400,400],[404,405],[404,404],[290,291],[290,290],[315,316],[315,315],[324,325],[324,324],[328,329],[328,328]]